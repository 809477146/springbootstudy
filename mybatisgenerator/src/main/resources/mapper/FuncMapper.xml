<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sz.dao.FuncMapper">
  <resultMap id="BaseResultMap" type="com.sz.model.Func">
    <id column="name" jdbcType="CHAR" property="name" />
    <result column="ret" jdbcType="BIT" property="ret" />
    <result column="dl" jdbcType="CHAR" property="dl" />
    <result column="type" jdbcType="CHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    name, ret, dl, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from func
    where name = #{name,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from func
    where name = #{name,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.sz.model.Func">
    insert into func (name, ret, dl, type
      )
    values (#{name,jdbcType=CHAR}, #{ret,jdbcType=BIT}, #{dl,jdbcType=CHAR}, #{type,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sz.model.Func">
    insert into func
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="ret != null">
        ret,
      </if>
      <if test="dl != null">
        dl,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ret != null">
        #{ret,jdbcType=BIT},
      </if>
      <if test="dl != null">
        #{dl,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sz.model.Func">
    update func
    <set>
      <if test="ret != null">
        ret = #{ret,jdbcType=BIT},
      </if>
      <if test="dl != null">
        dl = #{dl,jdbcType=CHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
    </set>
    where name = #{name,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sz.model.Func">
    update func
    set ret = #{ret,jdbcType=BIT},
      dl = #{dl,jdbcType=CHAR},
      type = #{type,jdbcType=CHAR}
    where name = #{name,jdbcType=CHAR}
  </update>
</mapper>